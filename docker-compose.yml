# @see https://medium.com/@xiaolishen/develop-in-docker-a-node-backend-and-a-react-front-end-talking-to-each-other-5c522156f634
# version: "3.8"

x-linux-container-environment:
  &common-linux-container-environment-variables
  TZ: ${TZ}
  # 1000 is the default main user uid/gid, using it as a sane default value
  APP_UID: ${APP_UID:-1000}
  APP_GID: ${APP_GID:-1000}

x-fastapi-app-environment:

  &common-fastapi-app-environment-variables
  TZ: ${TZ}
  # 1000 is the default main user uid/gid, using it as a sane default value
  APP_UID: ${APP_UID:-1000}
  APP_GID: ${APP_GID:-1000}
  API_PORT: ${API_PORT}
  API_PORT_INTERNAL: ${API_PORT_INTERNAL}
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_PORT: ${POSTGRES_PORT}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  SECRET_KEY: ${SECRET_KEY}
  PROJECT_NAME: ${PROJECT_NAME}
  SERVER_HOST_FRONT: ${SERVER_HOST_FRONT}

services:
  # react application
  health_chatbot-frontend:
    image: "health_chatbot-frontend:latest"
    depends_on:
      - health_chatbot-api
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT_INTERNAL}
    environment:
      <<: *common-linux-container-environment-variables
      CHOKIDAR_USEPOLLING: "true"
      REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
      FRONTEND_PORT_INTERNAL: ${FRONTEND_PORT_INTERNAL}
    stdin_open: true
    restart: unless-stopped

  # fastapi application
  health_chatbot-api:
    image: "health_chatbot-api:latest"
    ports:
      - ${API_PORT}:${API_PORT_INTERNAL}
    environment:
      <<: *common-fastapi-app-environment-variables
    command: uvicorn main:app --proxy-headers --host 0.0.0.0 --port 8000
    restart: unless-stopped

  # nginx reverse proxy for frontend/backend/mailhog
  health_chatbot-reverse-proxy:
    image: "health_chatbot-reverse-proxy:latest"
    depends_on:
      - health_chatbot-api
      - health_chatbot-frontend
    ports:
      - ${SSL_PORT}:443
      - ${REVERSE_PROXY_PORT}:80
    environment:
      <<: *common-linux-container-environment-variables
      API_PORT_INTERNAL: ${API_PORT_INTERNAL}
      FRONTEND_PORT_INTERNAL: ${FRONTEND_PORT_INTERNAL}
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  # certbot
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # postgres database, data is persisted in a volume
  health_chatbot-postgres:
    image: "postgres:14.5-alpine"
    environment:
      <<: *common-linux-container-environment-variables
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - health_chatbot-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  # pgadmin to view and control the database
  health_chatbot-pgadmin:
    image: "dpage/pgadmin4:5.3"
    depends_on:
      - health_chatbot-postgres
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      <<: *common-linux-container-environment-variables
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DEFAULT_PASSWORD_FILE: ${PGADMIN_DEFAULT_PASSWORD_FILE}
      # disable spamming all the screen with logs
      GUNICORN_ACCESS_LOGFILE: /dev/null
    restart: unless-stopped

volumes:
  health_chatbot-postgres-data:
    name: ${POSTGRES_STORAGE_VOLUME_NAME}